#!/bin/bash

# Script para sincronizar as ramifica√ß√µes do reposit√≥rio Quiz Quest Challenge Verse
# Criado em: 03/07/2025

echo "üîÑ Iniciando sincroniza√ß√£o das ramifica√ß√µes..."

# Certifique-se de que temos todas as refer√™ncias remotas atualizadas
echo "üì• Atualizando refer√™ncias remotas..."
git fetch --all

# Verificar em qual branch estamos e salvar para voltar depois
CURRENT_BRANCH=$(git symbolic-ref --short HEAD)
echo "üìå Branch atual: $CURRENT_BRANCH"

# Fun√ß√£o para resetar uma branch para o estado de outra
resetar_branch() {
  BRANCH=$1
  RESET_TO=$2
  
  echo "‚ö†Ô∏è Resetando $BRANCH para o estado de $RESET_TO..."
  
  # Verificar se as branches existem
  if ! git rev-parse --verify $BRANCH &> /dev/null; then
    echo "‚ùå Branch $BRANCH n√£o existe!"
    return 1
  fi
  
  if ! git rev-parse --verify $RESET_TO &> /dev/null; then
    echo "‚ùå Branch $RESET_TO n√£o existe!"
    return 1
  fi
  
  # Checkout na branch que ser√° resetada
  git checkout $BRANCH
  
  # Resetar para o estado da outra branch
  git reset --hard $RESET_TO
  
  echo "‚úÖ $BRANCH foi resetada para o estado de $RESET_TO!"
  return 0
}

# Fun√ß√£o para sincronizar duas branches
sincronizar_branches() {
  SOURCE=$1
  TARGET=$2
  
  echo "üîÑ Sincronizando $TARGET com $SOURCE..."
  
  # Verificar se a branch de origem existe
  if ! git rev-parse --verify $SOURCE &> /dev/null; then
    echo "‚ùå Branch $SOURCE n√£o existe!"
    return 1
  fi
  
  # Verificar se a branch de destino existe
  if ! git rev-parse --verify $TARGET &> /dev/null; then
    echo "‚ùå Branch $TARGET n√£o existe!"
    return 1
  fi
  
  # Checkout na branch de destino
  git checkout $TARGET
  
  # Mesclar a branch de origem na de destino
  git merge $SOURCE -m "Sincronizando $TARGET com $SOURCE"
  
  # Verificar se houve erro no merge
  if [ $? -ne 0 ]; then
    echo "‚ùå Erro ao mesclar $SOURCE em $TARGET. Resolvendo conflitos..."
    echo "‚ö†Ô∏è Por favor, resolva os conflitos manualmente e execute 'git merge --continue'"
    return 1
  else
    echo "‚úÖ $TARGET sincronizada com $SOURCE com sucesso!"
  fi
  
  return 0
}

# Resetar replit-agent para o estado da branch main (ignorando altera√ß√µes espec√≠ficas)
resetar_branch "origin/replit-agent" "origin/main"

# Sincronizar replit com main (agora que replit-agent est√° igual a main)
sincronizar_branches "origin/main" "origin/replit"

# Voltar para a branch original
git checkout $CURRENT_BRANCH

echo "‚úÖ Processo de sincroniza√ß√£o conclu√≠do!"
echo "üîç Verifique se h√° conflitos n√£o resolvidos e envie as altera√ß√µes para o reposit√≥rio remoto."
echo "üì§ Para enviar as altera√ß√µes para o reposit√≥rio remoto, execute:"
echo "    git push -f origin replit-agent"
echo "    git push origin main replit"
