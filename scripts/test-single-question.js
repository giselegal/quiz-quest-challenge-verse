#!/usr/bin/env node

console.log("üîß Script iniciado...");

import { createClient } from "@supabase/supabase-js";

console.log("üì¶ Supabase importado com sucesso");

const supabaseUrl = "https://txqljpitotmcxntprxiu.supabase.co";
const supabaseKey =
  "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InR4cWxqcGl0b3RtY3hudHByeGl1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDk4NjI3MzQsImV4cCI6MjA2NTQzODczNH0.rHGZV47KUnSJ0fDNXbL-OjuB50BsuzT2IeO_LL-P8ok";

const supabase = createClient(supabaseUrl, supabaseKey);

console.log("üîó Cliente Supabase criado");

// Primeiro, vamos inserir apenas uma quest√£o para testar
const testQuestion = {
  order_index: 12,
  type: "text",
  title: "Etapa de Transi√ß√£o 1: P√°gina Transi√ß√£o antes do resultado e oferta",
  description:
    "üïê Enquanto calculamos o seu resultado...\nQueremos te fazer algumas perguntas que v√£o tornar sua experi√™ncia ainda mais completa.\nA ideia √© simples: te ajudar a enxergar com mais clareza onde voc√™ est√° agora ‚Äî e para onde pode ir com mais inten√ß√£o, leveza e autenticidade.\nüí¨ Responda com sinceridade. Isso √© s√≥ entre voc√™ e a sua nova vers√£o.",
  is_transition: true,
  options: [],
};

console.log("üìù Dados da quest√£o teste preparados");

async function insertSingleQuestion() {
  try {
    console.log("üöÄ Iniciando inser√ß√£o da quest√£o teste...");

    const quizId = "550e8400-e29b-41d4-a716-446655440000";

    const { data: question, error: questionError } = await supabase
      .from("quiz_questions")
      .upsert(
        {
          id: `q${testQuestion.order_index}`,
          quiz_id: quizId,
          title: testQuestion.title,
          subtitle: testQuestion.subtitle || null,
          description: testQuestion.description || null,
          type: testQuestion.type,
          order_index: testQuestion.order_index,
          required_selections: 1,
          is_transition: testQuestion.is_transition || false,
          button_text: testQuestion.button_text || null,
          active: true,
          updated_at: new Date().toISOString(),
        },
        {
          onConflict: "id",
        }
      );

    if (questionError) {
      console.error("‚ùå Erro ao inserir quest√£o:", questionError);
      return false;
    }

    console.log("‚úÖ Quest√£o teste inserida com sucesso!");
    console.log("üìä Resultado:", question);
    return true;
  } catch (error) {
    console.error("‚ùå Erro cr√≠tico:", error);
    return false;
  }
}

console.log("üèÉ‚Äç‚ôÇÔ∏è Executando teste...");
insertSingleQuestion()
  .then((success) => {
    if (success) {
      console.log("üéâ TESTE PASSOU!");
    } else {
      console.log("‚ùå TESTE FALHOU!");
    }
  })
  .catch((error) => {
    console.error("‚ùå Erro na execu√ß√£o do teste:", error);
  });
