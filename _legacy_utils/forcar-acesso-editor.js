/* 
 * FERRAMENTA AVAN√áADA DE ACESSO AO EDITOR
 * Esta ferramenta ir√° for√ßar o acesso ao editor de forma robusta
 * e lidar com problemas comuns que possam estar impedindo o acesso
 */

javascript:(function() {
  console.clear();
  console.log('üîß FERRAMENTA DE DIAGN√ìSTICO E ACESSO AO EDITOR');
  console.log('-----------------------------------------------');
  
  // 1. Verificar o estado atual
  console.log('1Ô∏è‚É£ Verificando estado atual...');
  
  const userRole = localStorage.getItem('userRole');
  const userName = localStorage.getItem('userName');
  const isEditorPage = window.location.pathname === '/resultado/editor';
  
  console.log(`‚Ä¢ P√°gina atual: ${window.location.pathname}`);
  console.log(`‚Ä¢ userRole no localStorage: ${userRole || 'n√£o definido'}`);
  console.log(`‚Ä¢ userName no localStorage: ${userName || 'n√£o definido'}`);
  
  // 2. Limpar estado potencialmente problem√°tico
  console.log('2Ô∏è‚É£ Limpando qualquer estado problem√°tico...');
  
  // Limpar qualquer flag de redirecionamento
  sessionStorage.removeItem('redirectToEditor');
  
  // 3. Configurar o acesso de admin
  console.log('3Ô∏è‚É£ Configurando acesso admin...');
  
  localStorage.setItem('userRole', 'admin');
  localStorage.setItem('userName', localStorage.getItem('userName') || 'Admin');
  localStorage.setItem('adminAccessTime', Date.now().toString());
  
  // 4. Verificar se precisa ir para a p√°gina de editor
  console.log('4Ô∏è‚É£ Processando navega√ß√£o...');
  
  if (isEditorPage) {
    console.log('J√° estamos na p√°gina do editor, for√ßando reinicializa√ß√£o completa...');
    
    // Criar um elemento na p√°gina para mostrar o status
    const div = document.createElement('div');
    div.style.position = 'fixed';
    div.style.top = '0';
    div.style.left = '0';
    div.style.width = '100%';
    div.style.padding = '15px';
    div.style.backgroundColor = '#4CAF50';
    div.style.color = 'white';
    div.style.zIndex = '9999';
    div.style.fontFamily = 'Arial, sans-serif';
    div.style.textAlign = 'center';
    div.innerHTML = '<b>REINICIANDO EDITOR</b> - Aguarde um momento...';
    document.body.appendChild(div);
    
    // Delay para mostrar a mensagem antes de redirecionar
    setTimeout(() => {
      window.location.href = '/?forcedRedirect=true&ts=' + Date.now();
    }, 1500);
  } else if (window.location.search.includes('forcedRedirect=true')) {
    // Estamos voltando do redirecionamento for√ßado, ir para o editor
    console.log('Voltando para o editor ap√≥s redirecionamento for√ßado...');
    
    // Criar um elemento na p√°gina para mostrar o status
    const div = document.createElement('div');
    div.style.position = 'fixed';
    div.style.top = '0';
    div.style.left = '0';
    div.style.width = '100%';
    div.style.padding = '15px';
    div.style.backgroundColor = '#2196F3';
    div.style.color = 'white';
    div.style.zIndex = '9999';
    div.style.fontFamily = 'Arial, sans-serif';
    div.style.textAlign = 'center';
    div.innerHTML = '<b>ACESSANDO EDITOR</b> - Redirecionando...';
    document.body.appendChild(div);
    
    // Delay para mostrar a mensagem antes de redirecionar
    setTimeout(() => {
      window.location.href = '/resultado/editor?auth=' + Date.now();
    }, 1500);
  } else {
    // Primeira execu√ß√£o, ir para o editor
    console.log('Redirecionando para o editor...');
    window.location.href = '/resultado/editor';
  }
})();
