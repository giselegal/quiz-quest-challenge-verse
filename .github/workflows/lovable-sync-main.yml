name: 🔄 Lovable Sync Definitivo

on:
  push:
    branches: [main]
  schedule:
    # Executa a cada 15 minutos (mais frequente)
    - cron: "*/15 * * * *"
  workflow_dispatch: # Permite execução manual

permissions:
  contents: write
  actions: read

env:
  NODE_VERSION: "18"

jobs:
  lovable-sync:
    runs-on: ubuntu-latest
    name: Sincronização Lovable

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: 📦 Install Dependencies
        run: |
          npm ci
          echo "✅ Dependências instaladas"

      - name: 🔍 Validate Lovable Token
        run: |
          if [ -z "${{ secrets.LOVABLE_TOKEN }}" ]; then
            echo "❌ LOVABLE_TOKEN não configurado!"
            echo "📋 Configure em: https://github.com/${{ github.repository }}/settings/secrets/actions"
            echo "💡 Execute: npm run lovable:configure-token"
            exit 1
          else
            echo "✅ LOVABLE_TOKEN configurado"
            echo "Token preview: ${LOVABLE_TOKEN:0:8}...${LOVABLE_TOKEN: -4}"
          fi
        env:
          LOVABLE_TOKEN: ${{ secrets.LOVABLE_TOKEN }}

      - name: 🚀 Execute Lovable Sync
        run: |
          echo "🔄 Iniciando sincronização completa..."
          node scripts/prepare-lovable.js
          echo "✅ Preparação concluída"
        env:
          LOVABLE_TOKEN: ${{ secrets.LOVABLE_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 🔄 Force Sync with Webhook
        run: |
          echo "🌐 Executando sincronização forçada..."
          node scripts/force-lovable-sync.js
          echo "✅ Sincronização forçada concluída"
        env:
          LOVABLE_TOKEN: ${{ secrets.LOVABLE_TOKEN }}

      - name: 📝 Update Sync Status
        run: |
          CURRENT_TIMESTAMP=$(date +%s)
          echo "⏰ Timestamp: $CURRENT_TIMESTAMP"

          # Atualizar .lovable-trigger
          echo "LOVABLE_FORCE_SYNC=$CURRENT_TIMESTAMP" > .lovable-trigger
          echo "GITHUB_WORKFLOW_RUN=${{ github.run_id }}" >> .lovable-trigger
          echo "SYNC_TIME=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> .lovable-trigger

          # Atualizar .lovable se existir
          if [ -f ".lovable" ]; then
            node -e "
              const fs = require('fs');
              try {
                const config = JSON.parse(fs.readFileSync('.lovable', 'utf8'));
                config.sync = config.sync || {};
                config.sync.timestamp = $CURRENT_TIMESTAMP;
                config.sync.githubRunId = '${{ github.run_id }}';
                config.sync.lastWorkflowSync = new Date().toISOString();
                config.lastUpdate = new Date().toISOString();
                config.version = '2.2.$CURRENT_TIMESTAMP';
                config.tokenConfigured = true;
                fs.writeFileSync('.lovable', JSON.stringify(config, null, 2));
                console.log('✅ Configuração .lovable atualizada com workflow info');
              } catch (error) {
                console.log('⚠️ Erro ao atualizar .lovable:', error.message);
              }
            "
          fi

          # Atualizar status
          cat > .lovable-status << EOF
          {
            "lastSync": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "method": "github-workflow",
            "status": "sync-completed",
            "timestamp": $CURRENT_TIMESTAMP,
            "workflowRunId": "${{ github.run_id }}",
            "tokenConfigured": true
          }
          EOF

      - name: 🔔 Notify Lovable API
        run: |
          echo "📡 Notificando Lovable sobre sincronização..."

          # URLs de webhook para tentar
          WEBHOOK_URLS=(
            "https://api.lovable.dev/v1/sync/github"
            "https://hooks.lovable.dev/github/sync"
            "https://api.lovable.dev/webhook/github-sync"
            "https://sync.lovable.dev/api/github"
          )

          SUCCESS_COUNT=0

          for url in "${WEBHOOK_URLS[@]}"; do
            echo "🔗 Tentando: $url"
            
            response=$(curl -s -w "%{http_code}" -X POST "$url" \
              -H "Authorization: Bearer ${{ secrets.LOVABLE_TOKEN }}" \
              -H "Content-Type: application/json" \
              -H "User-Agent: GitHub-Actions-Lovable-Sync/2.0" \
              -d '{
                "repository": "${{ github.repository }}",
                "branch": "${{ github.ref_name }}",
                "commit": "${{ github.sha }}",
                "timestamp": '"$(date +%s)"',
                "workflow_run_id": "${{ github.run_id }}",
                "event": "push"
              }' \
              --connect-timeout 10 \
              --max-time 30 \
              -o /tmp/webhook_response.json)
            
            status_code="${response: -3}"
            
            if [ "$status_code" = "200" ] || [ "$status_code" = "201" ] || [ "$status_code" = "202" ]; then
              echo "✅ Sucesso em $url (${status_code})"
              SUCCESS_COUNT=$((SUCCESS_COUNT + 1))
            else
              echo "⚠️ Falha em $url (${status_code})"
              if [ -f /tmp/webhook_response.json ]; then
                cat /tmp/webhook_response.json 2>/dev/null || true
              fi
            fi
          done

          echo "📊 Webhooks bem-sucedidos: $SUCCESS_COUNT/${#WEBHOOK_URLS[@]}"

          if [ $SUCCESS_COUNT -gt 0 ]; then
            echo "✅ Pelo menos um webhook funcionou"
          else
            echo "⚠️ Nenhum webhook funcionou, mas sincronização pode ainda estar ativa"
          fi
        env:
          LOVABLE_TOKEN: ${{ secrets.LOVABLE_TOKEN }}

      - name: 💾 Commit Changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "Lovable Sync Bot"

          # Verificar se há alterações
          if [ -n "$(git status --porcelain)" ]; then
            git add .lovable-trigger .lovable .lovable-status
            git commit -m "🔄 Lovable Auto-Sync: $(date -u +%Y-%m-%d\ %H:%M:%S) [run:${{ github.run_id }}]"
            git push origin main
            echo "✅ Alterações commitadas e enviadas"
          else
            echo "ℹ️ Nenhuma alteração para commitar"
          fi

      - name: 🧪 Validate Sync
        run: |
          echo "🔍 Validando sincronização..."

          if [ -f ".lovable" ]; then
            echo "✅ Arquivo .lovable existe"
            node -e "
              const config = JSON.parse(require('fs').readFileSync('.lovable', 'utf8'));
              console.log('📊 Projeto:', config.name || 'N/A');
              console.log('📊 ID:', config.id || 'N/A');
              console.log('📊 Última atualização:', config.lastUpdate || 'N/A');
              console.log('📊 Token configurado:', config.tokenConfigured ? '✅' : '❌');
            "
          else
            echo "⚠️ Arquivo .lovable não encontrado"
          fi

          if [ -f ".lovable-status" ]; then
            echo "✅ Status de sincronização:"
            cat .lovable-status
          fi

          echo "🎉 Validação de sincronização concluída!"

      - name: 📊 Sync Summary
        run: |
          echo "📋 RESUMO DA SINCRONIZAÇÃO"
          echo "========================="
          echo "🔗 Repositório: ${{ github.repository }}"
          echo "🌿 Branch: ${{ github.ref_name }}"
          echo "📝 Commit: ${{ github.sha }}"
          echo "🏃 Workflow Run: ${{ github.run_id }}"
          echo "⏰ Timestamp: $(date -u +%Y-%m-%d\ %H:%M:%S)"
          echo "🔑 Token: $([ -n "${{ secrets.LOVABLE_TOKEN }}" ] && echo "✅ Configurado" || echo "❌ Ausente")"
          echo "========================="
