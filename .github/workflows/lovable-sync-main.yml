name: Lovable Sync Principal

on:
  push:
    branches: [main]
  schedule:
    # Executa a cada 30 minutos
    - cron: "*/30 * * * *"
  workflow_dispatch: # Permite execu√ß√£o manual

jobs:
  sync-lovable:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Execute Lovable preparation
        run: npm run lovable:prepare
        continue-on-error: true

      - name: Force Lovable sync
        run: |
          echo "üîÑ Executando sincroniza√ß√£o for√ßada do Lovable..."
          node scripts/force-lovable-sync.js

      - name: Update sync timestamps
        run: |
          CURRENT_TIMESTAMP=$(date +%s)
          echo "LOVABLE_FORCE_SYNC=$CURRENT_TIMESTAMP" > .lovable-trigger
          
          # Atualizar configura√ß√£o .lovable se existir
          if [ -f ".lovable" ]; then
            node -e "
              const fs = require('fs');
              try {
                const config = JSON.parse(fs.readFileSync('.lovable', 'utf8'));
                config.sync.timestamp = $CURRENT_TIMESTAMP;
                config.lastUpdate = new Date().toISOString();
                config.version = '2.1.$CURRENT_TIMESTAMP';
                fs.writeFileSync('.lovable', JSON.stringify(config, null, 2));
                console.log('‚úÖ Configura√ß√£o .lovable atualizada');
              } catch (error) {
                console.log('‚ö†Ô∏è Erro ao atualizar .lovable:', error.message);
              }
            "
          fi

      - name: Commit and push if changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action Lovable Sync"

          if [ -n "$(git status --porcelain)" ]; then
            git add .lovable-trigger .lovable .lovable-status
            git commit -m "üîÑ Auto-sync Lovable: timestamp $CURRENT_TIMESTAMP [$(date -u +%Y-%m-%d\ %H:%M:%S)]"
            git push
            echo "‚úÖ Altera√ß√µes commitadas e enviadas"
          else
            echo "‚ÑπÔ∏è Nenhuma altera√ß√£o para commitar"
          fi

      - name: Notify webhook (if configured)
        env:
          LOVABLE_TOKEN: ${{ secrets.LOVABLE_TOKEN }}
          LOVABLE_WEBHOOK_URL: ${{ secrets.LOVABLE_WEBHOOK_URL }}
        run: |
          if [ -n "$LOVABLE_WEBHOOK_URL" ] && [ -n "$LOVABLE_TOKEN" ]; then
            curl -X POST "$LOVABLE_WEBHOOK_URL" \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $LOVABLE_TOKEN" \
              -d '{"event": "sync", "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'", "source": "github-action", "repo": "quiz-sell-genius-66"}' \
              || echo "‚ö†Ô∏è Webhook falhou, mas continuando..."
          else
            echo "‚ÑπÔ∏è LOVABLE_TOKEN ou LOVABLE_WEBHOOK_URL n√£o configurados"
          fi

      - name: Build project (verifica√ß√£o)
        run: |
          npm run build
          echo "‚úÖ Build realizado com sucesso"
        continue-on-error: true
